<?php if(! defined('BASEPATH')) exit ('No direct script access allowed');
class Date_ex_01 extends CI_Controller {
    function __construct(){
        parent::__construct();
    }
    public function index ()
    {
       // ฟังก์ชั่น date(รูปแบบวันเวลา, timestamp) เป็นฟังก์ชั่นที่ใช้ในการจัดรูปแบบวันเวลาให้ตรงกับรูปแบบของแต่ล่ะท้องถิ่น ซึ้งค่า
       // timestamp คือวันเวลาที่ต้องการ หากไม่กำหนดถือว่าเป็นวันเวลาปัจจุบัน
       $birth = strtotime("01/10/2000"); // แปลงสตริงเป็นค่า timestamp 

       echo date("ดิฉันเกิดเมื่อ j-m-Y", $birth);

       $days = array("อาทิตย์", "จันทร์", "อังคาร", "พุธ", "พฤหัสบดี", "ศุกร์", "เสาร์"); // เก็บวัน จันทร์ - อาทิตย์ ไว้ใน array
       $months = array(1=>"มกราคม","กุมภาพันธ์", "มีนาคม", "เมษายน", "พฤษภาคม", "มิถุนายน", "กรกฎาคม", "สิงหาคม", "กันยายน", "ตุลาคม", "พฤษจิกายน", "ธันวาคม");
       // เก็บเดือนทั้ง 12 ไว้ใน array มี key เริ่มต้นที่ 1

       $d = date('w'); // ลำดับของวันในรอบสัปดาห์ (0-6) ไม่ใส่ timestamp เป็นลำดับของวันเวลาปัจจุบัน
       
       $day = $days[$d]; //เอาลำดับของวันในรอบสัปดาห์ $d มาเป็น key ให้กับ วัน เราก็จะรู้ว่า วันใน array $days ตรงกับวันไหนในสัปดาห์นี้
       // ชื่อวันจะเป็นภาษาไทย

       $date = date('j'); //วันที่ ปัจจุบัน แบบไม่มี 0 นำหน้า

       $m = date('n'); // ลำดับของเดือนแบบไม่มี 0 นำหน้า (1-12) ลำดับของเดือนปัจจุบัน
       $month = $months[$m];

       $year = date('Y') + 543; // ปี พ.ศ Y ใช้แทนปี ค.ศ แบบเลข 4 หลัก เช่น 1975 (ถ้าบวก 543 จะเป็น พ.ศ แบบไทย)

       echo "<br> วันนี้ตรงกับวัน $day วันที่ $date เดือน $month ปี $year <br>";
       echo date("ขณะนี้เวลา H:i:s"); // อักขระที่ใช้แทนเวลา H ใช้แทนค่าชั่วโมงของวันแบบ 24 ชั่วโมงโดยมี 0 นำหน้าเลขหลักเดียวระหว่าง 00-23
       // i ค่านาทีแบบมี 0 นำหน้าเลขหลักเดียวจาก 00-59 s ค่าวินาทีแบบมี 0 นำหน้าเลขหลักเดียวจาก 00-59
    }
    public function Increase_decrease_date()
    {
        // ปกติแล้วใน PHP ไม่มีฟังก์ชั่นที่ใช้ในการบวกลบวันเวลาโดยตรง ยกเว้นจะแปลงให้อยู่ในรูปแบบ timestamp
        // เสียก่อน แต่ด้วยความสามารถของฟังก์ชั่น strtotime() ที่สามารถแปลงจากสตริงธรรมดาให้เป็นวันเวลาแบบ
        // timestamp ได้ ทำให้การหาความแตกต่างของช่วงเวลานั้นง่ายขึ้น 
        // ตัวอย่างการกำหนดสตริงในการเพิ่มหรือลบวันเวลา
        $timestamp = strtotime("02/2/2019 12:30:59"); // string 

        $timestamp = strtotime("now"); // เช็คว่าเป็นวันเวลาปัจจุบัน
        $timestamp = strtotime("+30 days"); // อีก 30 วันนับจากปัจจุบัน 
        $timestamp = strtotime("-45 days"); // เมื่อ 45 วันที่แล้ว
        $timestamp = strtotime("+9 months"); // อีก 9 เดือน
        $timestamp = strtotime("-2 years"); // เมื่อ 2 ปีที่แล้ว

        // เทียบจากเวลาไดวลาหนึ่ง 
        $ts2 = strtotime("+45 days",$timestamp); // นับจาก 02/2/2019 ไปอีก 45 วัน เนื่อจากค่า strtotime จะอยู่ในแบบ timestamp
        // ดังนั้นเราควรแปลงให้อยู่ในรูปแบบที่เราเข้าใจได้ โดยใช้ฟังก์ชั่น date() หรือ getdate()
        echo date('อีก 45 วันจะตรงกับวันที่ m-d-Y',$ts2);
    }
}